@using FreedomWeb.ViewModels.Admin;
@model ServerControlViewModel
@{
    Layout = null;
    string bnetStatusClass = Model.BnetServerStatus == EnumServerAppStatus.Online ? "online" : "offline";
    string worldserverStatusClass = "offline";

    switch (Model.WorldServerStatus)
    {
        case EnumServerAppStatus.Online:
            worldserverStatusClass = "online";
            break;
        case EnumServerAppStatus.Loading:
            worldserverStatusClass = "loading";
            break;
        case EnumServerAppStatus.Offline:
        default:
            worldserverStatusClass = "offline";
            break;
    }
}
<div class="mb-3 row">
    @Html.LabelFor(m => m.BnetServerStatus, htmlAttributes: new { @class = "col-sm-4 col-form-label"})
    <div class="col-sm-8">
        @Html.TextBoxFor(m => m.BnetServerStatus, htmlAttributes: new { @readonly = true, @class = "form-control" })
    </div>
</div>
<div class="mb-3 row">
    @Html.LabelFor(m => m.WorldServerStatus, htmlAttributes: new { @class = "col-sm-4 col-form-label"})
    <div class="col-sm-8">
        @Html.TextBoxFor(m => m.WorldServerStatus, htmlAttributes: new { @readonly = true, @class = "form-control" })
    </div>
</div>
<div class="mb-3 row">
    @Html.LabelFor(m => m.ServerDirectoryPath, htmlAttributes: new { @class = "col-sm-4 col-form-label"})
    <div class="col-sm-8">
        @Html.TextBoxFor(m => m.ServerDirectoryPath, htmlAttributes: new { @readonly = true, @class = "form-control" })
    </div>
</div>
<div class="mb-3 row">
    @Html.LabelFor(m => m.WorldServerPath, htmlAttributes: new { @class = "col-sm-4 col-form-label"})
    <div class="col-sm-8">
        @Html.TextBoxFor(m => m.WorldServerPath, htmlAttributes: new { @readonly = true, @class = "form-control" })
    </div>
</div>
<div class="mb-3 row">
    @Html.LabelFor(m => m.WorldServerPid, htmlAttributes: new { @class = "col-sm-4 col-form-label"})
    <div class="col-sm-8">
        @Html.TextBoxFor(m => m.WorldServerPid, htmlAttributes: new { @readonly = true, @class = "form-control" })
    </div>
</div>
<div class="mb-3 row">
    @Html.LabelFor(m => m.BnetServerPath, htmlAttributes: new { @class = "col-sm-4 col-form-label"})
    <div class="col-sm-8">
        @Html.TextBoxFor(m => m.BnetServerPath, htmlAttributes: new { @readonly = true, @class = "form-control" })
    </div>
</div>
<div class="mb-3 row">
    @Html.LabelFor(m => m.BnetServerPid, htmlAttributes: new { @class = "col-sm-4 col-form-label"})
    <div class="col-sm-8">
        @Html.TextBoxFor(m => m.BnetServerPid, htmlAttributes: new { @readonly = true, @class = "form-control" })
    </div>
</div>