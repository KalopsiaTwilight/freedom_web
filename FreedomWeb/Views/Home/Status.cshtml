@using FreedomUtils.MvcUtils
@using FreedomWeb.ViewModels.Home
@model StatusViewModel
@{
    ViewBag.Title = "Status";
    bool isAdmin = User.IsInRole(FreedomLogic.Identity.FreedomRole.RoleAdmin);
}

<div class="form-group status-line mb-3">
    <div class="input-group" id="statusLineContainer">
        <label class="input-group-text" for="statusText">STATUS INFO</label>
        @if (Model.Status == EnumFreedomGameserverStatus.Online)
        {
            <input id="statusText" class="form-control status-good" value="@Model.Status.DisplayName()" readonly />
        }
        else if (Model.Status == EnumFreedomGameserverStatus.WorldLoading)
        {
            <input id="statusText" class="form-control status-loading" value="@Model.Status.DisplayName()" readonly />
        }
        else
        {
            <input id="statusText" class="form-control status-bad" value="@Model.Status.DisplayName()" readonly />
        }
    </div>
</div>

<h4 class="p-2">
    <i class="fa fa-users"></i> <span>Online list</span>
</h4>
<table class="table table-striped table-bordered" id="TableOnlineList">
    <thead>
        <tr style="vertical-align:middle">
            <th class="nosort noorder nosearch" style="vertical-align:middle"></th>
            <th style="vertical-align:middle">Name</th>
            <th class="nosort noorder" style="vertical-align:middle">Owner</th>
            <th style="vertical-align:middle">Race</th>
            <th style="vertical-align:middle">Class</th>
            <th style="vertical-align:middle">Map</th>
            <th style="vertical-align:middle">Zone</th>
            <th style="vertical-align:middle">Latency</th>
            <th class="nosort noorder nosearch" style="vertical-align:middle"></th>
        </tr>
    </thead>
    <tbody>
    </tbody>
</table>

@section scripts
{
<script type="text/javascript">
    function getIconDecoratedDataRowHtml(iconUrl, data)
    {
        var iconElem = '<img alt="Faction icon" src="' + iconUrl + '" style="height:32px; width:32px;" />';
        return iconElem + "\n" + data;
    }

    function getOwnerDataRowHtml(displayName, username)
    {
        var displayNameElem = '<b>Display name: </b> ' + displayName;
        var userNameElem = '<br />\n<b>Username: </b> ' + username;

        if (username)
        {
            return displayNameElem + '\n' + userNameElem;
        }
        else
        {
            return displayNameElem;
        }
    }

    function getActionRowHtml(userId)
    {
        var showProfileHrefElem = '<a href="@Url.Action("ShowProfile", "Account")/' + userId + '">Show profile &raquo;</a>';
        var showSetGameAccessHrefElem = '<a href="@Url.Action("SetGameAccess", "Admin")/' + userId + '">Change GMLevel &raquo;</a>';
        var showAdminStuff = @isAdmin.ToString().ToLower();
        if (showAdminStuff) {
            return showProfileHrefElem + '\n<br />\n' + showSetGameAccessHrefElem;
        }
        else
        {
            return showProfileHrefElem;
        }
    }

    function refreshStatusLine()
    {
        $.post("@Url.Action("StatusLinePartial", "Data")", function (data) {
            $("#statusLineContainer").html(data);
        })
    }

    function refreshOnlineList()
    {
        $('#TableOnlineList').DataTable().draw();
    }

    var statusLineRefreshIntervalId = setInterval(refreshStatusLine, 3000);
    var onlineListRefreshIntervalId = setInterval(refreshOnlineList, 10000);

    // Online list Datatable setup
    $('#TableOnlineList').FreedomServerDataTable({
        "dataUrl": "@Url.Action("OnlineListData", "Data")",
        "order": [[1, "asc"]],
        "drawCallback": function (settings) {
            // Index column
            if (settings.bSorted || settings.bFiltered) { // Need to redo the counters if filtered or sorted
                for (var i = 0; i < settings.aiDisplay.length ; i++) {
                    $('td:eq(0)', settings.aoData[settings.aiDisplay[i]].nTr).html((i + 1) + "#");
                }
            }
        },
        "columnDefs": [
            {
                "sortable": false,
                "targets": 'nosort'
            },
            {
                "searchable": false,
                "targets": 'nosearch'
            },
            {
                "orderable": false,
                "targets": 'noorder'
            },
            {
                "targets": 1,
                "render": function (row, type, val, meta)
                {
                    return getIconDecoratedDataRowHtml(val.FactionIconPath, val.Name);
                }
            },
            {
                "targets": 2,
                "render": function (row, type, val, meta)
                {
                    return getOwnerDataRowHtml(val.Owner, val.OwnerUsername);
                }
            },
            {
                "targets": 3,
                "render": function (row, type, val, meta)
                {
                    return getIconDecoratedDataRowHtml(val.RaceIconPath, val.Race);
                }
            },
            {
                "targets": 4,
                "render": function (row, type, val, meta)
                {
                    return getIconDecoratedDataRowHtml(val.ClassIconPath, val.Class);
                }
            },
            {
                "targets": 5,
                "render": function (row, type, val, meta)
                {
                    return val.MapName;
                }
            },
            {
                "targets": 6,
                "render": function (row, type, val, meta)
                {
                    return val.ZoneName;
                }
            },
            {
                "targets": 7,
                "render": function (row, type, val, meta)
                {
                    return val.Latency;
                }
            },
            {
                "targets": 8,
                "render": function (row, type, val, meta)
                {
                    return getActionRowHtml(val.UserId);
                }
            },
        ],
        "columns": [
            { "data": null },
            { "data": "Name" },
            { "data": "Owner" },
            { "data": "Race" },
            { "data": "Class" },
            { "data": "Map" },
            { "data": "Zone" },
            { "data": "Latency" },
            { "data": null }
        ],
    });
</script>
}
