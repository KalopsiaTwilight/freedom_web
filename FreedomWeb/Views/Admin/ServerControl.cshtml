@model FreedomWeb.ViewModels.Admin.ServerControlViewModel
@{
    ViewBag.Title = "Server control";
    bool worldServerRunning = Model.WorldServerStatus != FreedomWeb.ViewModels.Admin.EnumServerAppStatus.Offline;
    bool bnetServerRunning = Model.BnetServerStatus != FreedomWeb.ViewModels.Admin.EnumServerAppStatus.Offline;
}
<div class="row">
    <div class="col-md-8">
        <h4>
            <i class="fa fa-gears me-1"></i>
            Application Status
            <i class="fa fa-refresh fa-spin pull-right" style="display:none;" id="ServerControlDataLoadingIcon"></i>
        </h4>
        <partial name="_ServerControlData"></partial>
    </div>
    <div class="col-md-4">
        <h4 class="p-2 bg-dark mb-0 rounded-top text-white">
            <i class="fa fa-bolt me-1"></i>
            Actions
            <i class="fa fa-refresh fa-spin pull-right" style="display:none;" id="ServerControlActionsLoadingIcon"></i>
        </h4>
        <div class="p-3 bg-secondary text-dark rounded-bottom" style="--bs-bg-opacity: 0.2">
            <div class="btn-group w-100 mb-3">
                @if (bnetServerRunning)
                {
                    <button type="button" id="btnServerActionStopBnet" class="btn btn-danger">Stop Bnetserver</button>
                    <button type="button" id="btnServerActionStartBnet" class="btn btn-outline-success" disabled>Start Bnetserver</button>
                }
                else
                {
                    <button type="button" id="btnServerActionStopBnet" class="btn btn-outline-danger" disabled>Stop Bnetserver</button>
                    <button type="button" id="btnServerActionStartBnet" class="btn btn-success">Start Bnetserver</button>
                }
            </div>
            <div class="btn-group w-100">
                @if (worldServerRunning)
                {
                    <button type="button" id="btnServerActionStopWorld" class="btn btn-danger">Stop Worldserver</button>
                    <button type="button" id="btnServerActionStartWorld" class="btn btn-outline-success" disabled>Start Worldserver</button>
                }
                else
                {
                    <button type="button" id="btnServerActionStopWorld" class="btn btn-outline-danger" disabled>Stop Worldserver</button>
                    <button type="button" id="btnServerActionStartWorld" class="btn btn-success">Start Worldserver</button>
                }
            </div>
        </div>
    </div>
    <div class="col-md-12">
        <h4>
            <i class="fa fa-terminal me-1"></i>
            Action Log
            <button type="button" class="btn btn-sm btn-dark pull-right" id="btnServerControlClearLogs">Clear log</button>
        </h4>
        <div id="serverControlLogs" class="text-bg-dark text-white mb-3 p-2 rounded" style="height: 350px;">
        </div>
    </div>
</div>

@section scripts
    {
    <script type="text/javascript">
        function addLogEntry(text, type) {
            var _type = type || "default";
            var dateTime = new Date();
            var dateTimeString = dateTime.toLocaleString('nl-NL');
            var loggerElem = $('#serverControlLogs');
            var _class = "";

            switch (_type) {
                case "info":
                    _class = "text-info";
                    break;
                case "success":
                    _class = "text-success";
                    break;
                case "warning":
                    _class = "text-warning";
                    break;
                case "danger":
                    _class = "text-danger";
                    break;
                case "default":
                default:
                    _class = "";
                    break;
            }

            var parent = $("<div>");
            parent.append($('<span class="me-3 ' + _class + '">' + dateTimeString + '</span>'));
            parent.append($('<span class="' + _class + '">' + text + '</span>'));
            loggerElem.append(parent);
            loggerElem.scrollTop(loggerElem.prop("scrollHeight"));
        }

        function refreshServerControlData() {
            if ($("#ServerControlDataLoadingIcon").is(':animated')) {
                $("#ServerControlDataLoadingIcon").stop().animate({ opacity: '100' });
            }

            $("#ServerControlDataLoadingIcon").show();
            $.post("@Url.Action("ServerControlData", "Admin")", function (data) {
                $("#serverControlDataBody").html(data);
                $("#ServerControlDataLoadingIcon").fadeOut(1000);
            })
        }

        function refreshServerControlActions() {
            if ($("#ServerControlActionsLoadingIcon").is(':animated')) {
                $("#ServerControlActionsLoadingIcon").stop().animate({ opacity: '100' });
            }

            $("#ServerControlActionsLoadingIcon").show();
            $.post("@Url.Action("ServerControlActions", "Admin")", function (data) {
                if (data.bnetServerRunning) {
                    $("#btnServerActionStopBnet").prop("disabled", false);
                    $("#btnServerActionStartBnet").prop("disabled", true);
                }
                else {
                    $("#btnServerActionStopBnet").prop("disabled", true);
                    $("#btnServerActionStartBnet").prop("disabled", false);
                }

                if (data.worldServerRunning) {
                    $("#btnServerActionStopWorld").prop("disabled", false);
                    $("#btnServerActionStartWorld").prop("disabled", true);
                }
                else {
                    $("#btnServerActionStopWorld").prop("disabled", true);
                    $("#btnServerActionStartWorld").prop("disabled", false);
                }

                $("#ServerControlActionsLoadingIcon").fadeOut(1000);
            })
        }

        function stopBnetServer() {
            addLogEntry("Clearing/disabling refresh interval", "info");
            clearInterval(serverControlDataIntervalId);

            if ($("#ServerControlActionsLoadingIcon").is(':animated')) {
                $("#ServerControlActionsLoadingIcon").stop().animate({ opacity: '100' });
            }

            $("#ServerControlActionsLoadingIcon").show();
            $("#btnServerActionStopBnet").prop("disabled", true);
            $("#btnServerActionStartBnet").prop("disabled", true);

            addLogEntry("Sending BnetServer STOP request", "info");
            $.post("@Url.Action("ServerControlStopBnetServer", "Admin")", function (data) {
                if (data.status) {
                    addLogEntry("BnetServer STOP command executed successfully", "success");
                }
                else {
                    addLogEntry("BnetServer STOP command failed to execute. Error: " + data.error, "danger");
                }

                addLogEntry("Resetting/enabling refresh interval. Wait for next refresh before using buttons again.", "info");
                serverControlDataIntervalId = setInterval(refreshServerControlPage, 3000);
            });
        }

        function startBnetServer() {
            addLogEntry("Clearing/disabling refresh interval", "info");
            clearInterval(serverControlDataIntervalId);

            if ($("#ServerControlActionsLoadingIcon").is(':animated')) {
                $("#ServerControlActionsLoadingIcon").stop().animate({ opacity: '100' });
            }

            $("#ServerControlActionsLoadingIcon").show();
            $("#btnServerActionStartBnet").prop("disabled", true);
            $("#btnServerActionStopBnet").prop("disabled", true);

            addLogEntry("Sending BnetServer START request", "info");
            $.post("@Url.Action("ServerControlStartBnetServer", "Admin")", function (data) {
                if (data.status) {
                    addLogEntry("BnetServer START command executed successfully", "success");
                }
                else {
                    addLogEntry("BnetServer START command failed to execute. Error: " + data.error, "danger");
                }

                addLogEntry("Resetting/enabling refresh interval. Wait for next refresh before using buttons again.", "info");
                serverControlDataIntervalId = setInterval(refreshServerControlPage, 3000);
            });
        }

        function stopWorldServer() {
            addLogEntry("Clearing/disabling refresh interval", "info");
            clearInterval(serverControlDataIntervalId);

            if ($("#ServerControlActionsLoadingIcon").is(':animated')) {
                $("#ServerControlActionsLoadingIcon").stop().animate({ opacity: '100' });
            }

            $("#ServerControlActionsLoadingIcon").show();
            $("#btnServerActionStopWorld").prop("disabled", true);
            $("#btnServerActionStartWorld").prop("disabled", true);

            addLogEntry("Sending WorldServer STOP request", "info");
            $.post("@Url.Action("ServerControlStopWorldServer", "Admin")", function (data) {
                if (data.status) {
                    addLogEntry("WorldServer STOP command executed successfully", "success");
                }
                else {
                    addLogEntry("WorldServer STOP command failed to execute. Error: " + data.error, "danger");
                }

                addLogEntry("Resetting/enabling refresh interval. Wait for next refresh before using buttons again.", "info");
                serverControlDataIntervalId = setInterval(refreshServerControlPage, 3000);
            });
        }

        function startWorldServer() {
            addLogEntry("Clearing/disabling refresh interval", "info");
            clearInterval(serverControlDataIntervalId);

            if ($("#ServerControlActionsLoadingIcon").is(':animated')) {
                $("#ServerControlActionsLoadingIcon").stop().animate({ opacity: '100' });
            }

            $("#ServerControlActionsLoadingIcon").show();
            $("#btnServerActionStartWorld").prop("disabled", true);
            $("#btnServerActionStopWorld").prop("disabled", true);

            addLogEntry("Sending WorldServer START request", "info");
            $.post("@Url.Action("ServerControlStartWorldServer", "Admin")", function (data) {
                if (data.status) {
                    addLogEntry("WorldServer START command executed successfully", "success");
                }
                else {
                    addLogEntry("WorldServer START command failed to execute. Error: " + data.error, "danger");
                }

                addLogEntry("Resetting/enabling refresh interval. Wait for next refresh before using buttons again.", "info");
                serverControlDataIntervalId = setInterval(refreshServerControlPage, 3000);
            });
        }

        function refreshServerControlPage() {
            refreshServerControlData();
            refreshServerControlActions();
        }

        // Setup periodic interval of 3 seconds for server control data refresh
        var serverControlDataIntervalId = setInterval(refreshServerControlPage, 3000);

        // Setup clear-log button
        $("#btnServerControlClearLogs").click(function () {
            $("#serverControlLogs").html("");
        });

        // Setup server control action buttons
        $("#btnServerActionStopBnet").click(stopBnetServer);
        $("#btnServerActionStartBnet").click(startBnetServer);
        $("#btnServerActionStopWorld").click(stopWorldServer);
        $("#btnServerActionStartWorld").click(startWorldServer);
    </script>
}
